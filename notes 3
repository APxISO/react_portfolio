***Updated dashboard***

import React from 'react';
import { Box, Typography, useTheme } from "@mui/material";
import { tokens } from "../theme";
import Header from "../components/Header"; // Ensure this component exists or adjust accordingly

const Dashboard = ({ user }) => {
  const theme = useTheme();
  const colors = tokens(theme.palette.mode);

  // Ensure you pass 'user' prop to Dashboard when rendering it in your app
  
  return (
    <Box m="20px" sx={{ color: colors.grey[100] }}>
      {/* Personalized Greeting */}
      <Box textAlign="center" mb={5}>
        <Typography variant="h4" gutterBottom>Welcome to the Dashboard, {user?.username}!</Typography>
        <Typography variant="h6">You can navigate around the app from the sidebar on the left.</Typography>
      </Box>
      
      {/* Stylish and fun section - Example of what you can add */}
      <Box textAlign="center">
        <Header title="Explore" subtitle="Start by exploring the features available to you." />
        <Typography variant="body1" sx={{ mt: 2 }}>
          Use the sidebar to access different sections of the app, manage tasks, view progress, and more. Have fun!
        </Typography>
      </Box>

      {/* You can also include any other information or widgets you find necessary for your users */}
    </Box>
  );
};

export default Dashboard;





***********************


dashboard.jsx

import { Box, useTheme } from "@mui/material";
import { DataGrid } from "@mui/x-data-grid";
import { tokens } from "../theme";
import { mockTaskData } from "../../src/data/mockData";
import Header from "../components/Header";
import Button from "@mui/material/Button"; 

const Dashboard = () => {
  const theme = useTheme();
  const colors = tokens(theme.palette.mode);

  const filteredTasks = mockTaskData.filter(task => task.assignmentStatus === "Assigned"); const columns = [
    
    
    { field: "id", headerName: "ID" },
    {
      field: "taskName",
      headerName: "TASK NAME",
      flex: 1,
      cellClassName: "name-column--cell",
    },
    {
      field: "description",
      headerName: "DESCRIPTION",
      flex: 1,
      type: "string",
      
    },
    {
      field: "status",
      headerName: "STATUS",
      flex: 1,
    },
    {
      field: "dueDate",
      headerName: "DUE DATE",
      flex: 1,
    },
    { 
        field: "actions", 
        headerName: "ACTIONS", 
        flex: 1, 
        renderCell: (params) => { 
            return ( 
                <div> 
                    <Button 
                        variant="contained" 
                        color="primary" 
                        onClick={() => {/* Implement Take Survey Action */}} > 
                        Take Survey 
                    </Button> 
                    <Button 
                        variant="contained" 
                        color="secondary" 
                        onClick={() => {/* Implement Assign Action */}} 
                        style={{ marginLeft: 10 }} > 
                        Assign 
                    </Button> 
                </div> 
            ); 
        }, 
    }, 
];

  return (
    <Box  m="20px">
      <Header title="CURRENT TASKS" subtitle="The below tasks have been assigned to you." />
      <Box
        m="40px 0 0 0"
        height="65vh"
        boxShadow= 'rgba(0, 0, 0, 0.24) 0px 3px 8px'
        sx={{
          "& .MuiDataGrid-root": {
            border: "none",
          },
          "& .MuiDataGrid-cell": {
            borderBottom: "none",
          },
          "& .name-column--cell": {
            color: colors.greenAccent[300],
          },
          "& .MuiDataGrid-columnHeaders": {
            backgroundColor: colors.blueAccent[700],
            borderBottom: "none",
          },
          "& .MuiDataGrid-virtualScroller": {
            backgroundColor: colors.primary[400],
          },
          "& .MuiDataGrid-footerContainer": {
            borderTop: "none",
            backgroundColor: colors.blueAccent[700],
          },
          "& .MuiCheckbox-root": {
            color: `${colors.greenAccent[200]} !important`,
          },
        }}
      >
        <DataGrid checkboxSelection rows={filteredTasks} columns={columns} /> 
      </Box>
    </Box>
  );
};

export default Dashboard;
